;-------------------------------------------------------------;- SyncIt!;- small tool to synchronize two directories;- include file: synchronize.pbi;- Copyright 2020 by Markus Mueller <markus.mueller.73 at hotmail dot de>;- This program is free software;-------------------------------------------------------------Structure _PROGRESS_WND    id.i    txt_cpy.i    txt_cpy_file.i    prg_cpy.i    txt_del.i    txt_del_file.i    prg_del.i    btn_cancel.iEndStructureProcedure.l progress_window_open( parent_wnd.i , nb_of_copy.l , nb_of_del.l , *w._PROGRESS_WND )        With *w                \id = OpenWindow(#PB_Any, 0, 0, 400, 330, "Synchronize directories...", #PB_Window_Tool | #PB_Window_WindowCentered, WindowID(parent_wnd))        If IsWindow(\id)                        \txt_cpy        = TextGadget(#PB_Any, 10, 10, 380, 25, "Copy file:", #PB_Text_Center)            If nb_of_copy = 0                \txt_cpy_file   = TextGadget(#PB_Any, 10, 45, 380, 50, "Nothing to copy")                \prg_cpy        = ProgressBarGadget(#PB_Any, 10, 105, 380, 30, 0, 0, #PB_ProgressBar_Smooth)            Else                \txt_cpy_file   = TextGadget(#PB_Any, 10, 45, 380, 50, "")                \prg_cpy        = ProgressBarGadget(#PB_Any, 10, 105, 380, 30, 0, nb_of_copy, #PB_ProgressBar_Smooth)            EndIf                        \txt_del        = TextGadget(#PB_Any, 10, 150, 380, 25, "Delete file:", #PB_Text_Center)            If nb_of_del = 0                \txt_del_file   = TextGadget(#PB_Any, 10, 185, 380, 50, "Nothing to delete")                \prg_del        = ProgressBarGadget(#PB_Any, 10, 245, 380, 30, 0, 0, #PB_ProgressBar_Smooth)            Else                \txt_del_file   = TextGadget(#PB_Any, 10, 185, 380, 50, "")                \prg_del        = ProgressBarGadget(#PB_Any, 10, 245, 380, 30, 0, nb_of_del, #PB_ProgressBar_Smooth)            EndIf                        ;\btn_cancel     = ButtonGadget(#PB_Any, 150, 290, 100, 30, "Cancel")                    Else            err("Can't open child window.")        EndIf            EndWith        ProcedureReturn 1    EndProcedureProcedure.l sync_dirs( main_wnd.i , List l._FILE_DESCRIPTOR_EX() )        info("Begin to syncronize the directories.")        Protected.l i, j, start_date = Date()    Protected   wnd_progress._PROGRESS_WND        NewList cpy_job._PATHS()    NewList del_job.s()      ForEach l()                Select l()\sync_status                            Case #APP_COPY_SRC_COPY                                AddElement(cpy_job())                cpy_job()\src = l()\path\src + l()\name                cpy_job()\dst = l()\path\dst + l()\name                            Case #APP_COPY_DST_COPY                                AddElement(cpy_job())                cpy_job()\src = l()\path\dst + l()\name                cpy_job()\dst = l()\path\src + l()\name                            Case #APP_COPY_SRC_DEL                                AddElement(del_job())                del_job() = l()\path\src + l()\name                            Case #APP_COPY_DST_DEL                                AddElement(del_job())                del_job() = l()\path\dst + l()\name                        EndSelect            Next        clear_list(l())        If progress_window_open(main_wnd, ListSize(cpy_job()), ListSize(del_job()), @wnd_progress._PROGRESS_WND)                ForEach cpy_job()                        i + 1            SetGadgetText(wnd_progress\txt_cpy_file, cpy_job()\src)            SetGadgetState(wnd_progress\prg_cpy, i)                        CompilerIf #PB_Compiler_Debugger                Delay(250)            CompilerElse                CopyFile(cpy_job()\src, cpy_job()\dst)            CompilerEndIf                        info("Copied file " + cpy_job()\src + " to " + GetPathPart(cpy_job()\dst) + ".")                    Next                ForEach del_job()                        j + 1            SetGadgetText(wnd_progress\txt_del_file, del_job())            SetGadgetState(wnd_progress\prg_del, j)                        CompilerIf #PB_Compiler_Debugger                Delay(250)            CompilerElse                DeleteFile(del_job())            CompilerEndIf                        info("Deleted file " + del_job() + ".")                    Next            EndIf        CloseWindow(wnd_progress\id)        delete_list(cpy_job())    delete_list(del_job())      info("Synchronizing directories finished in "+FormatDate("%hh:%ii:%ss", Date()-start_date)+" hour(s).")        ProcedureReturn 1  EndProcedure; IDE Options = PureBasic 6.04 LTS (Windows - x64); CursorPosition = 107; FirstLine = 87; Folding = -; Optimizer; EnableXP; EnablePurifier; EnableCompileCount = 0; EnableBuildCount = 0; EnableExeConstant